import _ from 'lodash'
import PropTypes from 'prop-types'
import React, { Component } from 'react'
import { Table } from 'semantic-ui-react'

import ComponentPropsHeader from './ComponentPropsHeader'
import ComponentPropsRow from './ComponentPropsRow'

/**
 * Displays a table of a Component's PropTypes.
 */
export default class ComponentProps extends Component {
  static propTypes = {
    /**
     * A single Component's prop info as generated by react-docgen.
     * @type {object} Props info object where keys are prop names and values are prop definitions.
     */
    props: PropTypes.object,
    /**
     * A single Component's meta info.
     * @type {object} Meta info object where enum prop values are defined.
     */
    meta: PropTypes.object,
  }

  state = {
    showEnumsFor: {},
  }

  toggleEnumsFor = prop => () => {
    this.setState({
      showEnumsFor: {
        ...this.state.showEnumsFor,
        [prop]: !this.state.showEnumsFor[prop],
      },
    })
  }

  render() {
    const { props: propsDefinition } = this.props
    const { showEnumsFor } = this.state

    return (
      <Table compact='very' basic='very'>
        <ComponentPropsHeader />
        <Table.Body>
          {_.map(propsDefinition, item => (
            <ComponentPropsRow
              {...item}
              key={item.name}
              showEnums={showEnumsFor[item.name]}
              onToggleEnum={this.toggleEnumsFor(item.name)}
            />
          ))}
        </Table.Body>
      </Table>
    )
  }
}
